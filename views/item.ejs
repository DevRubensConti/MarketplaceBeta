<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title><%= item.nome %> - Detalhes do Produto</title>
  <link rel="stylesheet" href="/css/item.css" />
</head>
<body>
  <%- include('partials/navbar.ejs') %>

  <main class="item-container">
    <a href="<%= voltar || '/produtos' %>" class="btn-voltar-img" title="Voltar para a listagem">
      <img src="/images/return_listings.png" alt="Voltar para a listagem">
    </a>
    <h1 class="item-title"><%= item.nome %> - <%= item.condicao %></h1>
    <div class="item-main">
      <div class="item-gallery">
        <img src="<%= item.imagem_url.split(',')[0] %>" class="item-img" alt="Imagem principal do produto" />
        <div class="thumbnail-list">
          <% item.imagem_url.split(',').forEach(url => { %>
            <img src="<%= url.trim() %>" alt="Thumbnail" />
          <% }) %>
        </div>
      </div>
      <% if (dono) { %>
        <section class="seller-card">
          <!-- Coluna esquerda -->
          <div class="seller-left">
            <p class="seller-label"><%= item.tipo_usuario === 'pj' ? 'Loja Vendedora' : 'Vendedor' %>:</p>

            <div class="seller-avatar">
              <img 
                src="<%= dono.icone_url || '/images/chat-default.png' %>" 
                alt="Foto do vendedor">
            </div>

            <p class="seller-name">
              <strong><%= item.tipo_usuario === 'pj' ? (dono.nome_fantasia || dono.nomeFantasia) : dono.nome %></strong>
            </p>

            <p class="seller-location">
              <%= [dono.cidade, dono.estado].filter(Boolean).join(' - ') %>
            </p>
          
          <% const mediaDono = Number(dono?.nota_media || 0); %>
          <div class="seller-rating">
            <div class="stars">
              <% for (let i=1; i<=5; i++) { %>
                <span class="star <%= i <= Math.round(mediaDono) ? 'filled' : '' %>">‚òÖ</span>
              <% } %>
            </div>
            <small>
              <strong><%= mediaDono.toFixed(1) %>/5</strong>
              ¬∑ <%= dono?.total_avaliacoes || 0 %> avalia√ß√µes
            </small>
          </div>

            <a class="seller-profile" href="<%= item.tipo_usuario === 'pj' ? '/loja/' + dono.id : '/usuario/' + dono.id %>">
              Ver Perfil
            </a>
          </div>

          <!-- Coluna direita -->
          <div class="seller-right">
            <div class="seller-desc">
              <%= (typeof dono.descricao === 'string' && dono.descricao.trim().length) ? dono.descricao : 'Sem descri√ß√£o dispon√≠vel.' %>
            </div>
            <div class="seller-sales">
              <strong>Itens vendidos:</strong> <%= dono.itens_vendidos || 0 %>
            </div>
          </div>
        </section>
      <% } %>

      <div class="item-info">
      <div class="buttons">
        <!-- Comprar -->
        <div class="action-row">
          <form id="checkout-form-<%= item.id %>" action="/checkout" method="GET">
            <button type="button" class="btn-buy" data-id="<%= item.id %>">Comprar</button>
          </form>
        </div>

        <!-- Adicionar ao Carrinho -->
        <div class="action-row">
          <% if (!usuario) { %>
            <!-- N√£o logado: redireciona direto -->
            <a href="/login?redirect=<%= encodeURIComponent('/item/' + item.id) %>">
              <button class="btn-cart">Adicionar ao Carrinho</button>
            </a>
          <% } else { %>
            <!-- Logado: usa a fun√ß√£o normal -->
            <button class="btn-cart" onclick="adicionarCarrinho('<%= item.id %>')">Adicionar ao Carrinho</button>
          <% } %>
        </div>

        <div class="action-row">
          <% if (!usuario) { %>
            <a href="/login?redirect=<%= encodeURIComponent('/item/' + item.id) %>">
              <button class="btn-offer">Fazer Oferta</button>
            </a>
          <% } else { %>
            <button class="btn-offer" data-produto-id="<%= item.id %>" data-preco="<%= Number(item.preco) %>">
              Fazer Oferta
            </button>
          <% } %>
        </div>

        <!-- Fale com o Vendedor -->
        <div class="contact-row">
          <a href="/iniciar-chat/<%= item.id %>">
            <button class="btn-chat">Fale com o Vendedor</button>
          </a>
        </div>

        <!-- Favoritar -->
        <div class="favorite-row">
          <button class="btn-favorite" onclick="favoritarItem('<%= item.id %>')">
            Favoritar
          </button>
        </div>
      </div>


        <div class="price-rating">
          <h2>R$ <%= item.preco %></h2>
        </div>
        <% const mediaProd = Number(item?.nota_media || 0); %>
        <div class="item-rating">
          <div class="stars-item">
            <% for (let i=1; i<=5; i++) { %>
              <span class="star-item <%= i <= Math.round(mediaProd) ? 'filled' : '' %>">‚òÖ</span>
            <% } %>
            <span style="margin-left:8px;">
              <strong><%= mediaProd.toFixed(1) %>/5</strong>
              ¬∑ <%= item?.total_avaliacoes || 0 %> avalia√ß√µes
            </span>
            <span class="view-icon">üëÅ</span>
            <span class="view-count"><%= item.acessos || 0 %></span>
            <span class="days-listed">Anunciado h√° <%= item.dias_listado %> dias</span>
          </div>
        </div>
 
        <p class="description"><%= item.descricao %></p>
        <div class="item-specs">
          <h3>Especifica√ß√µes T√©cnicas</h3>
            <ul>
              <li><strong>Marca:</strong> <%= item.marca %></li>
              <li><strong>Shape:</strong> <%= item.shape %></li>
              <li><strong>Modelo:</strong> <%= item.modelo %></li>
              <li><strong>Condicao:</strong> <%= item.condicao %></li>
              <li><strong>Cor:</strong> <%= item.cor %></li>
              <li><strong>Madeira:</strong> <%= item.madeira %></li>
              <li><strong>Acabamento:</strong> <%= item.acabamento %></li>
              <li><strong>Pa√≠s de Fabrica√ß√£o:</strong> <%= item.pais_fabricacao %></li>
              <li><strong>Ano de Fabrica√ß√£o:</strong> <%= item.ano_fabricacao %></li>
              <li><strong>Configura√ß√£o de Captadores:</strong> <%= item.captadores_config %></li>
              <li><strong>Numero de Cordas:</strong> <%= item.cordas %></li>
            </ul>
        </div>
        


      </div>
    </div>

    

    <div class="extras">
      <div class="grafico">
        Gr√°fico de pre√ßos (em desenvolvimento)
      </div>
    </div>
  </main>

  <%- include('partials/footer.ejs') %>

<script>
  // Galeria (garante que o DOM carregou)
  document.addEventListener('DOMContentLoaded', () => {
    const mainImage = document.querySelector('.item-img');
    const thumbnails = document.querySelectorAll('.thumbnail-list img');

    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', () => {
        const newSrc = thumbnail.getAttribute('src');
        mainImage.setAttribute('src', newSrc);
      });
    });
  });
</script>

<script>
  // Adiciona item ao carrinho pelo mini-bot√£o "Adicionar ao Carrinho"
  async function adicionarCarrinho(produtoId) {
    try {
      const res = await fetch(`/api/carrinho/adicionar/${produtoId}`, {
        method: 'POST',
        credentials: 'same-origin'
      });

      if (res.status === 401) {
        window.location.href = '/login?redirect=' + encodeURIComponent(location.pathname + location.search);
        return;
      }

      if (!res.ok) {
        throw new Error('Erro ao adicionar ao carrinho.');
      }

      // Se voc√™ tem um bot√£o que abre o mini carrinho, dispare aqui (opcional)
      const btnMini = document.getElementById('btn-carrinho');
      if (btnMini) btnMini.click();

    } catch (e) {
      alert(e.message || 'Erro ao adicionar ao carrinho.');
    }
  }
</script>

<script>
  // Fluxo "Compre Agora": adiciona ao carrinho e vai para /checkout
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.btn-buy[data-id]').forEach((btn) => {
      btn.addEventListener('click', async () => {
        const produtoId = btn.dataset.id;
        btn.disabled = true;

        try {
          const ok = await adicionarCarrinhoCheckout(produtoId);
          if (ok) {
            // Redireciona direto para o checkout com o carrinho completo
            window.location.href = '/checkout';
          } else {
            btn.disabled = false;
          }
        } catch (e) {
          alert('N√£o foi poss√≠vel completar a opera√ß√£o. Tente novamente.');
          btn.disabled = false;
        }
      });
    });
  });

  async function adicionarCarrinhoCheckout(produtoId) {
    const res = await fetch(`/api/carrinho/adicionar/${produtoId}`, {
      method: 'POST',
      credentials: 'same-origin'
    });

    if (res.status === 401) {
      window.location.href = '/login?redirect=' + encodeURIComponent(location.pathname + location.search);
      return false;
    }

    if (!res.ok) {
      alert('Erro ao adicionar ao carrinho.');
      return false;
    }

    return true;
  }
</script>
<!-- Modal de Oferta -->
<div id="modal-oferta" class="oferta-modal hidden" aria-hidden="true">
  <div class="oferta-dialog" role="dialog" aria-modal="true" aria-labelledby="ofertaTitulo">
    <button class="oferta-close" title="Fechar">√ó</button>
    <h3 id="ofertaTitulo">Enviar Oferta</h3>

    <div class="oferta-price-line">
      <span>Pre√ßo do an√∫ncio:</span>
      <strong>R$ <span id="ofertaPrecoAnuncio"><%= Number(item.preco).toLocaleString('pt-BR', { minimumFractionDigits: 2 }) %></span></strong>
    </div>

    <label class="oferta-label">Valor da sua oferta (R$)</label>
    <input id="ofertaValor" type="text" inputmode="decimal" placeholder="0,00" autocomplete="off">

    <label class="oferta-label">Mensagem (opcional)</label>
    <textarea id="ofertaMensagem" rows="3" placeholder="Ex.: Posso retirar em m√£os, consigo pagar √† vista."></textarea>

    <div class="oferta-actions">
      <button id="ofertaCancelar" class="btn-outline">Cancelar</button>
      <button id="ofertaEnviar" class="btn-primary" data-produto-id="<%= item.id %>">Enviar Oferta</button>
    </div>

    <p id="ofertaFeedback" class="oferta-feedback" role="status" aria-live="polite"></p>
  </div>
</div>
<script>
(function() {
  const btnOffer = document.querySelector('.btn-offer');
  const modal = document.getElementById('modal-oferta');
  if (!btnOffer || !modal) return;

  const dialog = modal.querySelector('.oferta-dialog');
  const btnClose = modal.querySelector('.oferta-close');
  const btnCancelar = modal.querySelector('#ofertaCancelar');
  const btnEnviar = modal.querySelector('#ofertaEnviar');
  const inputValor = modal.querySelector('#ofertaValor');
  const textareaMsg = modal.querySelector('#ofertaMensagem');
  const feedback = modal.querySelector('#ofertaFeedback');

  const precoAnuncio = Number(btnOffer.dataset.preco || 0);

  // Helpers
  const openModal = () => {
    modal.classList.remove('hidden');
    modal.setAttribute('aria-hidden', 'false');
    inputValor.value = '';
    textareaMsg.value = '';
    feedback.textContent = '';
    setTimeout(() => inputValor.focus(), 50);
  };
  const closeModal = () => {
    modal.classList.add('hidden');
    modal.setAttribute('aria-hidden', 'true');
  };

  // Mascara/parse BRL simples
  const parseBR = (str) => {
    if (!str) return NaN;
    const s = str.replace(/\./g,'').replace(',', '.').replace(/[^\d.]/g,'');
    return Number(s);
  };
  const formatBR = (num) => num.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

  inputValor.addEventListener('input', () => {
    // permite digitar livre e s√≥ valida no envio
  });

  // Abrir
  btnOffer.addEventListener('click', () => openModal());

  // Fechar
  [btnClose, btnCancelar].forEach(el => el.addEventListener('click', closeModal));
  modal.addEventListener('click', (ev) => { if (ev.target === modal) closeModal(); });
  document.addEventListener('keydown', (ev) => {
    if (!modal.classList.contains('hidden') && ev.key === 'Escape') closeModal();
  });

  // Enviar
  btnEnviar.addEventListener('click', async () => {
    const produto_id = btnOffer.dataset.produtoId;
    const valor = parseBR(inputValor.value);

    if (!valor || isNaN(valor) || valor <= 0) {
      feedback.textContent = 'Informe um valor de oferta v√°lido.';
      return;
    }
    // Valida√ß√£o leve: geralmente a oferta √© <= pre√ßo do an√∫ncio
    if (precoAnuncio && valor > precoAnuncio) {
      feedback.textContent = 'A oferta costuma ser menor ou igual ao pre√ßo do an√∫ncio.';
      return;
    }

    btnEnviar.disabled = true;
    feedback.textContent = 'Enviando sua oferta...';

    try {
      const res = await fetch('/api/ofertas', {
        method: 'POST',
        credentials: 'same-origin',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          produto_id,
          valor: Number(valor.toFixed(2)),
          mensagem: textareaMsg.value?.trim() || null
        })
      });

      if (res.status === 401) {
        // redireciona para login preservando retorno
        window.location.href = '/login?redirect=' + encodeURIComponent(location.pathname + location.search);
        return;
      }

      if (!res.ok) {
        const msg = (await res.json().catch(()=>({})))?.error || 'N√£o foi poss√≠vel enviar a oferta.';
        throw new Error(msg);
      }

      feedback.textContent = 'Oferta enviada com sucesso! O vendedor ser√° notificado.';
      // Fechar depois de um tempinho
      setTimeout(() => {
        closeModal();
        // opcional: abrir chat
        // window.location.href = '/iniciar-chat/<%= item.id %>';
      }, 900);
    } catch (e) {
      feedback.textContent = e.message || 'Erro ao enviar oferta.';
    } finally {
      btnEnviar.disabled = false;
    }
  });
})();
</script>


</body>
</html>
